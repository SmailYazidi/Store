"use client"

import { createContext, useContext, useState, type ReactNode } from "react"
import { ThemeProvider } from "next-themes"

type Language = "ar" | "en"

interface LanguageContextType {
  language: Language
  setLanguage: (lang: Language) => void
  t: (key: string) => string
}

const translations = {
  ar: {
    store: "المتجر",
    products: "المنتجات",
    categories: "الفئات",
    cart: "السلة",
    checkout: "الدفع",
    trackOrder: "تتبع الطلب",
    search: "البحث",
    searchProducts: "البحث في المنتجات...",
    addToCart: "أضف إلى السلة",
    buyNow: "اشتري الآن",
    price: "السعر",
    originalPrice: "السعر الأصلي",
    inStock: "متوفر",
    outOfStock: "غير متوفر",
    quantity: "الكمية",
    total: "المجموع",
    subtotal: "المجموع الفرعي",
    shipping: "الشحن",
    tax: "الضريبة",
    orderSummary: "ملخص الطلب",
    customerInfo: "معلومات العميل",
    name: "الاسم",
    email: "البريد الإلكتروني",
    phone: "الهاتف",
    address: "العنوان",
    city: "المدينة",
    postalCode: "الرمز البريدي",
    paymentMethod: "طريقة الدفع",
    cashOnDelivery: "الدفع عند الاستلام",
    creditCard: "بطاقة ائتمان",
    placeOrder: "تأكيد الطلب",
    orderPlaced: "تم تأكيد الطلب",
    orderNumber: "رقم الطلب",
    trackingNumber: "رقم التتبع",
    orderStatus: "حالة الطلب",
    pending: "قيد الانتظار",
    confirmed: "مؤكد",
    processing: "قيد المعالجة",
    shipped: "تم الشحن",
    delivered: "تم التسليم",
    cancelled: "ملغي",
    featured: "مميز",
    newArrivals: "وصل حديثاً",
    bestSellers: "الأكثر مبيعاً",
    onSale: "في التخفيضات",
    filterBy: "تصفية حسب",
    clearFilters: "مسح التصفية",
    sortBy: "ترتيب حسب",
    priceAsc: "السعر: من الأقل إلى الأعلى",
    priceDesc: "السعر: من الأعلى إلى الأقل",
    nameAsc: "الاسم: أ-ي",
    nameDesc: "الاسم: ي-أ",
    newest: "الأحدث",
    oldest: "الأقدم",
    noResults: "لا توجد نتائج",
    loading: "جاري التحميل...",
    error: "حدث خطأ",
    tryAgain: "حاول مرة أخرى",
    backToHome: "العودة للرئيسية",
    viewDetails: "عرض التفاصيل",
    specifications: "المواصفات",
    description: "الوصف",
    reviews: "التقييمات",
    relatedProducts: "منتجات ذات صلة",
    admin: "الإدارة",
    dashboard: "لوحة التحكم",
    login: "تسجيل الدخول",
    logout: "تسجيل الخروج",
    username: "اسم المستخدم",
    password: "كلمة المرور",
    orders: "الطلبات",
    manageProducts: "إدارة المنتجات",
    manageCategories: "إدارة الفئات",
    addProduct: "إضافة منتج",
    editProduct: "تعديل منتج",
    deleteProduct: "حذف منتج",
    addCategory: "إضافة فئة",
    editCategory: "تعديل فئة",
    deleteCategory: "حذف فئة",
    save: "حفظ",
    cancel: "إلغاء",
    delete: "حذف",
    edit: "تعديل",
    view: "عرض",
    actions: "الإجراءات",
    yes: "نعم",
    no: "لا",
    confirm: "تأكيد",
    areYouSure: "هل أنت متأكد؟",
    thisActionCannotBeUndone: "لا يمكن التراجع عن هذا الإجراء",
    success: "نجح",
    failed: "فشل",
    productAdded: "تم إضافة المنتج",
    productUpdated: "تم تحديث المنتج",
    productDeleted: "تم حذف المنتج",
    categoryAdded: "تم إضافة الفئة",
    categoryUpdated: "تم تحديث الفئة",
    categoryDeleted: "تم حذف الفئة",
    orderUpdated: "تم تحديث الطلب",
    uploadImage: "رفع صورة",
    selectImage: "اختر صورة",
    dragAndDrop: "اسحب وأفلت الصورة هنا",
    or: "أو",
    browse: "تصفح",
    imageUploaded: "تم رفع الصورة",
    imageDeleted: "تم حذف الصورة",
    maxFileSize: "الحد الأقصى لحجم الملف",
    supportedFormats: "الصيغ المدعومة",
    required: "مطلوب",
    invalidEmail: "بريد إلكتروني غير صحيح",
    invalidPhone: "رقم هاتف غير صحيح",
    minLength: "الحد الأدنى للطول",
    maxLength: "الحد الأقصى للطول",
    mustBeNumber: "يجب أن يكون رقماً",
    mustBePositive: "يجب أن يكون رقماً موجباً",
  },
  en: {
    store: "Store",
    products: "Products",
    categories: "Categories",
    cart: "Cart",
    checkout: "Checkout",
    trackOrder: "Track Order",
    search: "Search",
    searchProducts: "Search products...",
    addToCart: "Add to Cart",
    buyNow: "Buy Now",
    price: "Price",
    originalPrice: "Original Price",
    inStock: "In Stock",
    outOfStock: "Out of Stock",
    quantity: "Quantity",
    total: "Total",
    subtotal: "Subtotal",
    shipping: "Shipping",
    tax: "Tax",
    orderSummary: "Order Summary",
    customerInfo: "Customer Information",
    name: "Name",
    email: "Email",
    phone: "Phone",
    address: "Address",
    city: "City",
    postalCode: "Postal Code",
    paymentMethod: "Payment Method",
    cashOnDelivery: "Cash on Delivery",
    creditCard: "Credit Card",
    placeOrder: "Place Order",
    orderPlaced: "Order Placed",
    orderNumber: "Order Number",
    trackingNumber: "Tracking Number",
    orderStatus: "Order Status",
    pending: "Pending",
    confirmed: "Confirmed",
    processing: "Processing",
    shipped: "Shipped",
    delivered: "Delivered",
    cancelled: "Cancelled",
    featured: "Featured",
    newArrivals: "New Arrivals",
    bestSellers: "Best Sellers",
    onSale: "On Sale",
    filterBy: "Filter By",
    clearFilters: "Clear Filters",
    sortBy: "Sort By",
    priceAsc: "Price: Low to High",
    priceDesc: "Price: High to Low",
    nameAsc: "Name: A-Z",
    nameDesc: "Name: Z-A",
    newest: "Newest",
    oldest: "Oldest",
    noResults: "No Results",
    loading: "Loading...",
    error: "Error",
    tryAgain: "Try Again",
    backToHome: "Back to Home",
    viewDetails: "View Details",
    specifications: "Specifications",
    description: "Description",
    reviews: "Reviews",
    relatedProducts: "Related Products",
    admin: "Admin",
    dashboard: "Dashboard",
    login: "Login",
    logout: "Logout",
    username: "Username",
    password: "Password",
    orders: "Orders",
    manageProducts: "Manage Products",
    manageCategories: "Manage Categories",
    addProduct: "Add Product",
    editProduct: "Edit Product",
    deleteProduct: "Delete Product",
    addCategory: "Add Category",
    editCategory: "Edit Category",
    deleteCategory: "Delete Category",
    save: "Save",
    cancel: "Cancel",
    delete: "Delete",
    edit: "Edit",
    view: "View",
    actions: "Actions",
    yes: "Yes",
    no: "No",
    confirm: "Confirm",
    areYouSure: "Are you sure?",
    thisActionCannotBeUndone: "This action cannot be undone",
    success: "Success",
    failed: "Failed",
    productAdded: "Product Added",
    productUpdated: "Product Updated",
    productDeleted: "Product Deleted",
    categoryAdded: "Category Added",
    categoryUpdated: "Category Updated",
    categoryDeleted: "Category Deleted",
    orderUpdated: "Order Updated",
    uploadImage: "Upload Image",
    selectImage: "Select Image",
    dragAndDrop: "Drag and drop image here",
    or: "or",
    browse: "Browse",
    imageUploaded: "Image Uploaded",
    imageDeleted: "Image Deleted",
    maxFileSize: "Max file size",
    supportedFormats: "Supported formats",
    required: "Required",
    invalidEmail: "Invalid email",
    invalidPhone: "Invalid phone",
    minLength: "Minimum length",
    maxLength: "Maximum length",
    mustBeNumber: "Must be a number",
    mustBePositive: "Must be positive",
  },
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

export function LanguageProvider({ children }: { children: ReactNode }) {
  const [language, setLanguage] = useState<Language>("ar")

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations.ar] || key
  }

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      <ThemeProvider attribute="class" defaultTheme="light" enableSystem disableTransitionOnChange>
        {children}
      </ThemeProvider>
    </LanguageContext.Provider>
  )
}

export function useLanguage() {
  const context = useContext(LanguageContext)
  if (context === undefined) {
    throw new Error("useLanguage must be used within a LanguageProvider")
  }
  return context
}

export function Providers({ children }: { children: ReactNode }) {
  return <LanguageProvider>{children}</LanguageProvider>
}
