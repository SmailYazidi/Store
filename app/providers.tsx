"use client"

import { createContext, useContext, useState, type ReactNode } from "react"

interface LanguageContextType {
  language: "ar" | "fr"
  setLanguage: (lang: "ar" | "fr") => void
  t: (key: string) => string
}

const translations = {
  ar: {
    store: "المتجر",
    products: "المنتجات",
    trackOrder: "تتبع الطلب",
    search: "بحث",
    orderOnline: "اطلب أونلاين",
    orderWhatsApp: "اطلب عبر واتساب",
    viewAll: "عرض الكل",
    orderNow: "اطلب الآن",
    continue: "متابعة",
    name: "الاسم",
    phone: "رقم الهاتف",
    email: "البريد الإلكتروني",
    address: "العنوان",
    orderCode: "رمز الطلب",
    orderStatus: "حالة الطلب",
    processing: "جاري المعالجة",
    confirmed: "مؤكد",
    rejected: "مرفوض",
    delivered: "تم التسليم",
    price: "السعر",
    category: "الفئة",
    description: "الوصف",
    images: "الصور",
    mainImage: "الصورة الرئيسية",
    visible: "مرئي",
    hidden: "مخفي",
    add: "إضافة",
    edit: "تعديل",
    delete: "حذف",
    save: "حفظ",
    cancel: "إلغاء",
    confirm: "تأكيد",
    loading: "جاري التحميل...",
    error: "خطأ",
    success: "نجح",
    admin: "الإدارة",
    dashboard: "لوحة التحكم",
    login: "تسجيل الدخول",
    password: "كلمة المرور",
    orders: "الطلبات",
    customer: "العميل",
    total: "المجموع",
    date: "التاريخ",
    status: "الحالة",
    actions: "الإجراءات",
    filter: "تصفية",
    all: "الكل",
    addProduct: "إضافة منتج",
    addCategory: "إضافة فئة",
    productName: "اسم المنتج",
    categoryName: "اسم الفئة",
    selectCategory: "اختر الفئة",
    uploadImages: "رفع الصور",
    selectMainImage: "اختر الصورة الرئيسية",
    makeVisible: "جعل مرئي",
    makeHidden: "جعل مخفي",
    deleteConfirm: "هل أنت متأكد من الحذف؟",
    orderSummary: "ملخص الطلب",
    orderInfo: "معلومات الطلب",
    paymentInfo: "معلومات الدفع",
    payNow: "ادفع الآن",
    orderSuccess: "تم إنشاء الطلب بنجاح",
    copyCode: "نسخ الرمز",
    codeCopied: "تم نسخ الرمز",
    forgotCode: "نسيت رمز الطلب؟",
    contactUs: "تواصل معنا",
    trackingInfo: "معلومات التتبع",
    orderDetails: "تفاصيل الطلب",
    loadMore: "تحميل المزيد",
    noProducts: "لا توجد منتجات",
    noOrders: "لا توجد طلبات",
    searchProducts: "البحث في المنتجات",
    searchOrders: "البحث في الطلبات",
    categories: "الفئات",
  },
  fr: {
    store: "Magasin",
    products: "Produits",
    trackOrder: "Suivre commande",
    search: "Rechercher",
    orderOnline: "Commander en ligne",
    orderWhatsApp: "Commander WhatsApp",
    viewAll: "Voir tout",
    orderNow: "Commander maintenant",
    continue: "Continuer",
    name: "Nom",
    phone: "Téléphone",
    email: "Email",
    address: "Adresse",
    orderCode: "Code commande",
    orderStatus: "Statut commande",
    processing: "En cours",
    confirmed: "Confirmé",
    rejected: "Rejeté",
    delivered: "Livré",
    price: "Prix",
    category: "Catégorie",
    description: "Description",
    images: "Images",
    mainImage: "Image principale",
    visible: "Visible",
    hidden: "Caché",
    add: "Ajouter",
    edit: "Modifier",
    delete: "Supprimer",
    save: "Enregistrer",
    cancel: "Annuler",
    confirm: "Confirmer",
    loading: "Chargement...",
    error: "Erreur",
    success: "Succès",
    admin: "Administration",
    dashboard: "Tableau de bord",
    login: "Connexion",
    password: "Mot de passe",
    orders: "Commandes",
    customer: "Client",
    total: "Total",
    date: "Date",
    status: "Statut",
    actions: "Actions",
    filter: "Filtrer",
    all: "Tout",
    addProduct: "Ajouter produit",
    addCategory: "Ajouter catégorie",
    productName: "Nom du produit",
    categoryName: "Nom de la catégorie",
    selectCategory: "Choisir catégorie",
    uploadImages: "Télécharger images",
    selectMainImage: "Choisir image principale",
    makeVisible: "Rendre visible",
    makeHidden: "Rendre caché",
    deleteConfirm: "Êtes-vous sûr de supprimer?",
    orderSummary: "Résumé commande",
    orderInfo: "Info commande",
    paymentInfo: "Info paiement",
    payNow: "Payer maintenant",
    orderSuccess: "Commande créée avec succès",
    copyCode: "Copier code",
    codeCopied: "Code copié",
    forgotCode: "Code oublié?",
    contactUs: "Nous contacter",
    trackingInfo: "Info suivi",
    orderDetails: "Détails commande",
    loadMore: "Charger plus",
    noProducts: "Aucun produit",
    noOrders: "Aucune commande",
    searchProducts: "Rechercher produits",
    searchOrders: "Rechercher commandes",
    categories: "Catégories",
  },
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

export function Providers({ children }: { children: ReactNode }) {
  const [language, setLanguage] = useState<"ar" | "fr">("ar")

  const t = (key: string) => {
    return translations[language][key as keyof typeof translations.ar] || key
  }

  return <LanguageContext.Provider value={{ language, setLanguage, t }}>{children}</LanguageContext.Provider>
}

export const useLanguage = () => {
  const context = useContext(LanguageContext)
  if (!context) {
    throw new Error("useLanguage must be used within Providers")
  }
  return context
}
